@using GridMvc.Html
@model IEnumerable<ClipperPortal.Models.DeviceSurveyListItem>

@{
    ViewBag.Title = "Device Surveys";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var filter = string.Empty;

    if (Request.QueryString["grid-filter"] != null)
    {
        var filterString = Request.QueryString["grid-filter"];
        filter = filterString.Replace("__", "|").Split('|')[2];
    }
}

<div class="device-survey list-page">
    <h2>Device Survey</h2>

    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    @Html.ActionLink("Export to CSV", "Export", null, new { @class = "btn btn-info pull-right btn-export" })

    @{ Html.RenderPartial("_StatusMessage"); }

    @Html.Grid(Model).Named("deviceSurveyGrid").Columns(columns =>
    {
        columns.Add(x => x.ID).Titled("ID").Css("primary-key hidden");
        columns.Add(x => x.Operator).Titled("Operator").Sortable(true).Filterable(true).SetFilterWidgetType("OperatorFilterWidget");
        columns.Add(x => x.ReportingPeriod).Titled("Reporting Period").Sortable(true).Filterable(true).SetFilterWidgetType("ReportingPeriodFilterWidget");
        columns.Add(x => x.RecordStatus).Titled("Record Status").Sortable(true).Filterable(true).SetFilterWidgetType("RecordStatusFilterWidget");
        columns.Add(x => x.ReplacementVehicles).Titled("Replacement Vehicles").SetWidth("4rem");
        columns.Add(x => x.ExpansionVehicles).Titled("Expansion Vehicles").SetWidth("4rem");
        columns.Add().Encoded(false).Sanitized(false).SetWidth("3rem").RenderValueAs(x => Html.ActionLink("Edit", "Edit", new { id = x.ID }, new { @class = "btn btn-primary btn-xs" }));
        columns.Add().Encoded(false).Sanitized(false).SetWidth("3rem").RenderValueAs(x => @<button class="btn btn-danger btn-xs btn-delete" data-id="@x.ID">Delete</button>);
    }).WithPaging(15)
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            PageController.bind();
            PageController.filterValue = '@filter';
            pageGrids.deviceSurveyGrid.addFilterWidget(new OperatorFilterWidget());
            pageGrids.deviceSurveyGrid.addFilterWidget(new ReportingPeriodFilterWidget());
            pageGrids.deviceSurveyGrid.addFilterWidget(new RecordStatusFilterWidget());

            $('.btn-export').click(function (evt) {
                evt.preventDefault();
                window.open('/DeviceSurvey/Export');
            });
        });
    </script>
}
