@using GridMvc.Html
@model IEnumerable<ClipperPortal.Models.ReplacementVehicle>

@{
    ViewBag.Title = "Clipper - Replacement Vehicles";

    var message = string.Empty;
    var className = string.Empty;

    if (TempData.ContainsKey("Message"))
    {
        message = TempData["Message"].ToString();
    }
    else if (TempData.ContainsKey("ErrorMessage"))
    {
        className = "error-message";
        message = TempData["ErrorMessage"].ToString();
    }
}
<div class="replacement-vehicles list-page">
    <h2>Replacement Vehicles</h2>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    @{
        <span class="status-message @className">@message</span>
    }
    @Html.Grid(Model).Named("replacementVehiclesGrid").Columns(columns =>
    {
        columns.Add(x => x.ID).Css("hidden");
        columns.Add(x => x.CalendarYear).Titled("Calendar Year").Sortable(true);
        columns.Add(x => x.Agency).Titled("Operator").Sortable(true);
        columns.Add(x => x.Manufacturer).Titled("Manufacturer").Sortable(true);
        columns.Add(x => x.VehicleCount).Titled("Vehicle Count").Sortable(true);
        columns.Add(x => x.VehicleModel).Titled("Vehicle Model").Sortable(true);
        columns.Add(x => x.RecordStatus).Titled("Record Status").Sortable(true);
        columns.Add().Encoded(false).Sanitized(false).RenderValueAs(x => Html.ActionLink("Edit", "Edit", new { id = x.ID }, new { @class = "btn btn-primary btn-xs" }));
        columns.Add().Encoded(false).Sanitized(false).RenderValueAs(x => @<button class="btn btn-danger btn-xs btn-delete" data-id="@x.ID">Delete</button>);
    }).WithPaging(15)
</div>

@section Scripts
{
    <script type="text/javascript">
        PageManager.startStatusMessageTimer();

        $(function () {
            PageManager.bind();
        });
    </script>
}
