USE clipperreporting;

DROP TABLE IF EXISTS `devicesurvey`;
CREATE TABLE `devicesurvey` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CalendarYear` text NOT NULL,
  `Agency` text NOT NULL,
  `UserName` text,
  `Email` text,
  `HasGillig` bit(1) NOT NULL DEFAULT 0,
  `HasNewFlyer` bit(1) NOT NULL DEFAULT 0,
  `HasElDorado` bit(1) NOT NULL DEFAULT 0,
  `HasOther` bit(1) NOT NULL DEFAULT 0,
  `OtherName` text,
  -- Gillig
  `GilligNewVehicles` text,
  `GilligNewModel` text,
  `GilligReplacementVehicles` text,
  `GilligReplacementManufacturingDate` text,
  `GilligReplacementDeliveryDate` text,
  `GilligExpansionVehicles` text,
  `GilligExpansionManufacturingDate` text,
  `GilligExpansionDeliveryDate` text,
  -- New Flyer
  `NewFlyerNewVehicles` text,
  `NewFlyerNewModel` text,
  `NewFlyerReplacementVehicles` text,
  `NewFlyerReplacementManufacturingDate` text,
  `NewFlyerReplacementDeliveryDate` text,
  `NewFlyerExpansionVehicles` text,
  `NewFlyerExpansionManufacturingDate` text,
  `NewFlyerExpansionDeliveryDate` text,
  -- El Dorado
  `ElDoradoNewVehicles` text,
  `ElDoradoNewModel` text,
  `ElDoradoReplacementVehicles` text,
  `ElDoradoReplacementManufacturingDate` text,
  `ElDoradoReplacementDeliveryDate` text,
  `ElDoradoExpansionVehicles` text,
  `ElDoradoExpansionManufacturingDate` text,
  `ElDoradoExpansionDeliveryDate` text,
  -- Other
  `OtherNewVehicles` text,
  `OtherNewModel` text,
  `OtherReplacementVehicles` text,
  `OtherReplacementManufacturingDate` text,
  `OtherReplacementDeliveryDate` text,
  `OtherExpansionVehicles` text,
  `OtherExpansionManufacturingDate` text,
  `OtherExpansionDeliveryDate` text,
  `IsExpectingNewVehicles` bit(1) NOT NULL DEFAULT 0, -- Are you anticipating delivery of new vehicles in in this calendar year?
  `ExistingVehicleDetails` text, -- If yes, (and assuming the internal layout of the 2016 vehicle is similar to previous versions), will you be seeking to install Clipper® equipment in the same/similar location on the new vehicles?
  `ReplacementVehicleDetails` text, -- No, specify the model and equipment placement details
  `PreWireRequirements` text,
  `IncludedCosts` text,
  `RecordStatus` text NOT NULL,
  `DateCreated` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `LastUpdated` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `agencies`;
CREATE TABLE `agencies` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Name` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

TRUNCATE TABLE agencies;
INSERT INTO agencies (ID, Name) VALUES ('1', 'AC Transit');
INSERT INTO agencies (ID, Name) VALUES ('2', 'County Connection');
INSERT INTO agencies (ID, Name) VALUES ('3', 'Central Contra Costa Transit Authority');
INSERT INTO agencies (ID, Name) VALUES ('4', 'Eastern Contra Costa Transit Authority');
INSERT INTO agencies (ID, Name) VALUES ('5', 'FAST');
INSERT INTO agencies (ID, Name) VALUES ('6', 'GGT');
INSERT INTO agencies (ID, Name) VALUES ('7', 'LAVTA');
INSERT INTO agencies (ID, Name) VALUES ('8', 'Marin Transit');
INSERT INTO agencies (ID, Name) VALUES ('9', 'NVTA');
INSERT INTO agencies (ID, Name) VALUES ('10', 'Petaluma Transit');
INSERT INTO agencies (ID, Name) VALUES ('11', 'SamTrams');
INSERT INTO agencies (ID, Name) VALUES ('12', 'SFMTA');
INSERT INTO agencies (ID, Name) VALUES ('13', 'Santa Rosa City Bus');
INSERT INTO agencies (ID, Name) VALUES ('14', 'SolTrans');
INSERT INTO agencies (ID, Name) VALUES ('15', 'Sonoma County Transit');
INSERT INTO agencies (ID, Name) VALUES ('16', 'Union City Transit');
INSERT INTO agencies (ID, Name) VALUES ('17', 'Vacaville City Coach');
INSERT INTO agencies (ID, Name) VALUES ('18', 'VTA');
INSERT INTO agencies (ID, Name) VALUES ('19', 'WestCAT');

DROP TABLE IF EXISTS `auditrecords`;
CREATE TABLE `auditrecords` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DateChanged` timestamp NOT NULL,
  `EntityName` text,
  `Action` text,
  `PrimaryKeyValue` text,
  `PropertyName` text,
  `OldValue` text,
  `NewValue` text,
  `UserName` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `calendaryears`;
CREATE TABLE `calendaryears` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Name` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

TRUNCATE TABLE calendaryears;
INSERT INTO calendaryears (ID, Name) VALUES ('1', 'Jan - Dec 2016');
INSERT INTO calendaryears (ID, Name) VALUES ('2', 'Jan - Dec 2017');
INSERT INTO calendaryears (ID, Name) VALUES ('3', 'Jan - Dec 2018');
INSERT INTO calendaryears (ID, Name) VALUES ('4', 'Jan - Dec 2019');
INSERT INTO calendaryears (ID, Name) VALUES ('5', 'Jan - Dec 2020');

DELIMITER ;;
DROP PROCEDURE IF EXISTS `getmatrix`
;;
CREATE PROCEDURE `getmatrix`()
BEGIN
	SELECT Agency, CalendarYear, RecordStatus,
		IF(SUM(NewVehicles) > 0, 'Y', '') AS NewVehicles,
		IF(SUM(ReplacementVehicles) > 0, 'Y', '') AS ReplacementVehicles,
		IF(SUM(ExpansionVehicles) > 0, 'Y', '') AS ExpansionVehicles
	FROM (SELECT
		Agency,
		cal.Name AS CalendarYear,
		RecordStatus,
		-- New Vehicles
		IF(!HasGillig OR GilligNewVehicles IS NULL, 0, 1) +
		IF(!HasNewFlyer OR NewFlyerNewVehicles IS NULL, 0, 1) +
		IF(!HasElDorado OR ElDoradoNewVehicles IS NULL, 0, 1) +
		IF(!HasOther OR OtherNewVehicles IS NULL, 0, 1) AS NewVehicles,
		-- Replacement Vehicles
		IF(!HasGillig OR GilligReplacementVehicles IS NULL, 0, 1) +
		IF(!HasNewFlyer OR NewFlyerReplacementVehicles IS NULL, 0, 1) +
		IF(!HasElDorado OR ElDoradoReplacementVehicles IS NULL, 0, 1) +
		IF(!HasOther OR OtherReplacementVehicles IS NULL, 0, 1) AS ReplacementVehicles,
		-- ExpansionVehicles
		IF(!HasGillig OR GilligExpansionVehicles IS NULL, 0, 1) +
		IF(!HasNewFlyer OR NewFlyerExpansionVehicles IS NULL, 0, 1) +
		IF(!HasElDorado OR ElDoradoExpansionVehicles IS NULL, 0, 1) +
		IF(!HasOther OR OtherExpansionVehicles IS NULL, 0, 1) AS ExpansionVehicles
		FROM calendaryears cal
		LEFT OUTER JOIN devicesurvey d ON d.CalendarYear = cal.Name
	) AA
	GROUP BY CalendarYear, Agency, RecordStatus
	ORDER BY CalendarYear, Agency, RecordStatus;
END
;;
