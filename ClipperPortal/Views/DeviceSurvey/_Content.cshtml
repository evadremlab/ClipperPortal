@using ClipperPortal.Services
@model ClipperPortal.Models.DeviceSurvey

@{
    var HIDDEN = "hidden";
    var lookupData = ViewHelper.GetLookupData();
}

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.RecordStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RecordStatus, lookupData.RecordStatus, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RecordStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @if (Model.ID == 0)
        {
            @Html.LabelFor(model => model.Agency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.Agency, lookupData.Agencies, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Agency, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            @Html.LabelFor(model => model.Agency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4 display-only">
                @Html.DisplayFor(model => model.Agency)
            </div>
        }
        @Html.LabelFor(model => model.CalendarYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.CalendarYear, lookupData.CalendarYears, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CalendarYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <fieldset>
        <legend>
            Manufacturers
        </legend>
        <div class="form-group with-custom-label">
            <div class="checkbox col-md-4">
                <label>
                    @Html.CheckBoxFor(model => model.HasGillig, new { @onClick = "PageController.toggle.call(this, 'Gillig');" }) Gillig
                </label>
                <label>
                    @Html.CheckBoxFor(model => model.HasNewFlyer, new { @onClick = "PageController.toggle.call(this, 'NewFlyer');" }) New Flyer
                </label>
                <label>
                    @Html.CheckBoxFor(model => model.HasElDorado, new { @onClick = "PageController.toggle.call(this, 'ElDorado');" }) El Dorado
                </label>
                <label>
                    @Html.CheckBoxFor(model => model.HasOther, new { @onClick = "PageController.toggle.call(this, 'Other');" }) Other
                </label>
            </div>
            @{
                var classNames = string.Format("control-label col-md-2 other-name {0}", Model.HasOther ? "" : HIDDEN);
            }
            @Html.LabelFor(model => model.OtherName, htmlAttributes: new { @class = @classNames })
            <div class="col-md-6 other-name @(Model.HasOther ? "" : HIDDEN)">
                @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>
            New Vehicles
        </legend>
        <div class="form-group with-custom-label">
            <div class="checkbox col-md-12">
                <label>
                    @Html.CheckBoxFor(model => model.IsExpectingNewVehicles, new { @onClick = "PageController.toggle.call(this, 'ExpectingNewVehicles')" }) Are you anticipating delivery of new vehicles in this calendar year?
                </label>
            </div>
        </div>

        <div class="expecting-new-vehicles @(Model.IsExpectingNewVehicles ? "" : HIDDEN)">
            <h4>How many vehicles?</h4>

            <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
                @Html.LabelFor(model => model.GilligNewVehicles, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GilligNewVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.GilligNewVehicles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
                @Html.LabelFor(model => model.NewFlyerNewVehicles, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewFlyerNewVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.NewFlyerNewVehicles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
                @Html.LabelFor(model => model.ElDoradoNewVehicles, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ElDoradoNewVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.ElDoradoNewVehicles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
                @Html.LabelFor(model => model.OtherNewVehicles, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OtherNewVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.OtherNewVehicles, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="expecting-new-vehicles @(Model.IsExpectingNewVehicles ? "" : HIDDEN)">
            <h4>What model of vehicle (example: low-floor, BRT front)?</h4>

            <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
                @Html.LabelFor(model => model.GilligNewModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GilligNewModel, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.GilligNewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
                @Html.LabelFor(model => model.NewFlyerNewModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewFlyerNewModel, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.NewFlyerNewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
                @Html.LabelFor(model => model.ElDoradoNewModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ElDoradoNewModel, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.ElDoradoNewModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
                @Html.LabelFor(model => model.OtherNewModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OtherNewModel, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                    @Html.ValidationMessageFor(model => model.OtherNewModel, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>
            Existing Vehicles
        </legend>
        <h4>Do you own existing vehicles of the same/similar model?</h4>
        @*<div class="form-group with-custom-label">
                <div class="checkbox col-md-12">
                    <label>
                        @Html.CheckBoxFor(model => model.OwnExistingVehicles)
                    </label>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ExistingVehicleDetails, htmlAttributes: new { @class = "control-label col-md-12 text-left-important" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ExistingVehicleDetails, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ExistingVehicleDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReplacementVehicleDetails, htmlAttributes: new { @class = "control-label col-md-12 text-left-important" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ReplacementVehicleDetails, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ReplacementVehicleDetails, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>
            How many of these are vehicle replacements, or fleet additions?
        </legend>

        <p><em>As a reminder to Clipper® operators, any additional vehicle equipment required for fleet expansion must be procured by MTC</em></p>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligReplacementVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligReplacementVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligReplacementVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligExpansionVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligExpansionVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligExpansionVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerReplacementVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerReplacementVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerReplacementVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerExpansionVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerExpansionVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerExpansionVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoReplacementVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoReplacementVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoReplacementVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoExpansionVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoExpansionVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoExpansionVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherReplacementVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherReplacementVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherReplacementVehicles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherExpansionVehicles, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherExpansionVehicles, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherExpansionVehicles, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>
            Manufacturing
        </legend>

        <h4>When (dates) do vehicles start the manufacturing line?</h4>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligReplacementManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligReplacementManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligReplacementManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligExpansionManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligExpansionManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligExpansionManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerReplacementManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerReplacementManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerReplacementManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerExpansionManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerExpansionManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerExpansionManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoReplacementManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoReplacementManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoReplacementManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoExpansionManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoExpansionManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoExpansionManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherReplacementManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherReplacementManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherReplacementManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherExpansionManufacturingDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherExpansionManufacturingDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherExpansionManufacturingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>When (dates) are vehicles anticipated to be delivered to your facility?</h4>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligReplacementDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligReplacementDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligReplacementDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group gillig @(Model.HasGillig ? "" : HIDDEN)">
            @Html.LabelFor(model => model.GilligExpansionDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.GilligExpansionDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.GilligExpansionDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerReplacementDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerReplacementDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerReplacementDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group newflyer @(Model.HasNewFlyer ? "" : HIDDEN)">
            @Html.LabelFor(model => model.NewFlyerReplacementDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NewFlyerReplacementDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.NewFlyerReplacementDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoReplacementDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoReplacementDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoReplacementDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group eldorado @(Model.HasElDorado ? "" : HIDDEN)">
            @Html.LabelFor(model => model.ElDoradoExpansionDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ElDoradoExpansionDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.ElDoradoExpansionDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherReplacementDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherReplacementDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherReplacementDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group other @(Model.HasOther ? "" : HIDDEN)">
            @Html.LabelFor(model => model.OtherExpansionDeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OtherExpansionDeliveryDate, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.OtherExpansionDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Procurement</legend>
        <h4>Does your procurement agreement with your vehicle manufacturer include the following:</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.PreWireRequirements, htmlAttributes: new { @class = "control-label col-md-12 text-left-important" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.PreWireRequirements, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.PreWireRequirements, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncludedCosts, htmlAttributes: new { @class = "control-label col-md-12 text-left-important" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.IncludedCosts, new { htmlAttributes = new { @class = "form-control full-width-important" } })
                @Html.ValidationMessageFor(model => model.IncludedCosts, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
